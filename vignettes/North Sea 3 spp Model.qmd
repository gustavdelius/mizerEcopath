---
title: "North Sea 3 Species Model"
format: pdf
editor: visual
---

# Introduction

Creating a simplified 3 species North Sea model.

## Loading in Repository and Libraries

```{r}
#| warning: false
#| message: false
#| results: 'hide'
# Currently we still need a special branch of mizer
remotes::install_github("sizespectrum/mizer", ref = "diffusion")

library(mizerEcopath)
library(dplyr)
library(readr)
library(here)
```

## Choosing Species

In this example the species modelled include Saithe (*Pollachius virens)*, Herring (*Clupea harengus*), and Dab (*Limanda limanda*), in an attempt to create a simple model with the selected species occupying a variety of niches (ie: one large piscivorous fish (saithe), one small pelagic fish (herring), and one benthic fish species (dab)).

You will need to create a table with some species-specific parameters, such as von Bertalanffy growth parameters, length-weight parameters, and maturity parameters. These can be taken from FishBase or other sources. The species parameters data frame should include the following columns: - `species`: Common name of the species - `SciName`: Scientific name of the species - `l_inf` or `w_inf`: von Bertalanffy asymptotic length (cm) or weight (g) - `k_vb`: von Bertalanffy growth rate (1/year) - `t0`: von Bertalanffy age zero (years) - `l_mat` or `w_mat`: Length (cm) or weight (g) at 50% maturity - `a`: Length-weight relationship parameter a - `b`: Length-weight relationship parameter b

For our example we have collected the information for the three species we are modelling in a csv file called `North Sea 3 spp params.csv` which is included in the `inst/extdata` folder of the mizerEcopath package. Let's load it in and have a peek:

```{r}
#| warning: false
#| message: false

sp <- 
    read_csv(here::here("inst", "extdata", "ns_3_spp_species_params.csv"))
head(sp)
```

We included many columns that mizer will not use but that will be nice for us to keep track of.

## Load in Data

Load in the accompanying .csv files exported from Ecopath. This data includes species parameters, diet data and total catch data. TODO: more info about which Ecopath model we used.

```{r}
#| warning: false
#| message: false
#| results: 'hide'
#Load in ecopath parameters
ecopath_params <- read.csv(here("inst", "extdata",
                                "North Sea-Basic estimates.csv"))
ecopath_diet <- read.csv(here("inst", "extdata",
                              "North Sea-Diet composition.csv"))
ecopath_catch <- read.csv(here("inst", "extdata",
                              "North Sea-Landings.csv"))
```

We have extracted the size distribution of the landings data for the three species from STECF data. TODO: more info on this table.

```{r}
#Load in catch data
catch <- read.csv(here("inst", "extdata", "ns_3_spp_catch.csv"))

# temporarily we still need to duplicate the `count` column to `catch
catch$catch <- catch$count
```

## Set l_max based on observed sizes in the landings data

The `l_max` species parameter lets mizer know up to what size it needs to calculate species abundances. By setting it not too much larger than the largest observed size in the landings data, we can reduce the computational burden of the model and also choose the scale of the size axis in plots appropriately. We set `l_max` to 1.5 times the maximum observed weight in the landings data.

```{r}
sp <- catch %>%
  group_by(species) %>%
  summarise(l_max = 1.5 * max(length + dl, na.rm = TRUE)) %>%
  right_join(sp, by = "species")
```

## Dictionary Between Species and Ecopath Groups

Add the Ecopath species parameters including biomass (B) in tonnes per km², consumption per biomass (Q/B), and production per consumption (P/Q). These are passed to the function \[addEcopathParams()\] (add link to help page) which computes production per unit of biomass (P/B) internally from these estimates and stores these values in new columns in the species params data frame. These following columns are added to the species parameters data frame: biomass_observed, consumption_observed, production_observed, and ecopath_groups.

*Note: This is not the same as matching full interspecific interactions — we’re importing only the overall species-level empirical rates, not species to species rates which are properties which only emerge once diets and predation kernels are specified.*

```{r}
#Create a dictionary between ecopath data frame and sp
species_to_groups <- list(
    "Herring" = c("Herring (juvenile 0, 1)", "Herring (adult)"),
    "Dab"     = "Dab",
    "Saithe"  = c("Juvenile Saithe (0-3, 0-40cm)", "Saithe (adult)")
)
# add biomass, production, and consumption to species parameters
sp <- addEcopathParams(sp, ecopath_params, species_to_groups)
```

# Initial Model

## Create Model

Use newAllometric Params to create a model

```{r}
p <- newAllometricParams(sp, no_w = 200)
```

## Add Total Fishing Mortality

```{r}
p <- addEcopathCatchTotal(p, ecopath_catch)
```

## Adjust Diet Matrix

```{r}
dm <- reduceEcopathDiet(sp, ecopath_diet, ecopath_params)
#saveRDS(dm, "inst/extdata/ns_3_spp_model_adjusted_diet_matrix.rds")
```

## Match Model to Observations

```{r}
p <- p |> matchGrowth() |>steadySingleSpecies() |>matchBiomasses()
p <- p |> matchCatch(catch = catch, yield_lambda = 1) 
#odd warning at match catch
p <- p |>matchConsumption()

ns_3_spp_model_initial <- p
#use_data(ns_3_spp_model_initial)
```

## Manual Tuning

```{r}
#| eval: false
p_tuned <- tuneEcopath(
    p, 
    catch = catch, 
    diet = dm,
    preserve = c("reproduction_level")
)
#ns_3_spp_model_trial<-p_tuned
#use_data(ns_3_spp_model_trial)

```
